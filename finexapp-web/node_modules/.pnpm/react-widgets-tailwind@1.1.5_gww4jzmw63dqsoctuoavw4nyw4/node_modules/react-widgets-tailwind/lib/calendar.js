"use strict";

exports.__esModule = true;
exports.theme = exports.plugin = void 0;

var _colors = _interopRequireDefault(require("tailwindcss/colors"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const theme = {
  rwCalendar: theme => {
    const core = theme('rwCore');
    const button = theme('rwButton');
    const selected = theme('colors.blue.500', _colors.default.blue[500]);
    return {
      backgroundColor: core.backgroundColor,
      borderRadius: button.borderRadius,
      btnBackgroundColor: theme('colors.white', _colors.default.white),
      btnColor: button.color,
      btnBorderColor: null,
      btnBackgroundClip: button.backgroundClip,
      btnMutedColor: theme('colors.gray.400', _colors.default.gray[400]),
      btnBorderRadius: button.borderRadius,
      btnHoverBackgroundColor: button.hoverBackgroundColor,
      btnHoverBorderColor: button.hoverBorderColor,
      btnHoverColor: button.hoverColor,
      btnActiveBackgroundColor: null,
      btnActiveBorderColor: null,
      btnActiveColor: null,
      btnFocusBackgroundColor: null,
      btnFocusBorderColor: null,
      btnFocusColor: null,
      cellAlign: 'center',
      cellPadding: theme('padding.2'),
      cellBackgroundClip: core.backgroundClip,
      cellColor: button.color,
      cellBorderColor: null,
      cellBorderRadius: button.borderRadius,
      cellHoverBackgroundColor: button.hoverBackgroundColor,
      cellHoverBorderColor: button.hoverBackgroundColor,
      cellHoverColor: button.hoverColor,
      cellActiveBackgroundColor: null,
      cellActiveBorderColor: null,
      cellActiveColor: null,
      cellFocusBackgroundColor: null,
      cellFocusBorderColor: null,
      cellFocusColor: null,
      cellSelectedBackgroundColor: selected,
      cellSelectedBorderColor: selected,
      cellSelectedColor: theme('colors.white', _colors.default.white)
    };
  }
};
exports.theme = theme;

const plugin = ({
  theme,
  addComponents
}) => {
  const core = theme('rwCore');
  const cal = theme('rwCalendar');
  addComponents({
    ".rw-calendar-popup": {
      "@apply right-auto min-w-0": "true",
      "width": "22em"
    },
    ".rw-calendar": {
      "@apply overflow-hidden": "true"
    },
    ".rw-calendar-contained": {
      "borderRadius": cal.borderRadius,
      "backgroundColor": cal.backgroundColor,
      "border": `${core.borderColor} 1px solid`
    },
    ".rw-calendar-now": {
      "@apply font-bold": "true"
    },
    ".rw-calendar-header": {
      "display": "flex",
      "padding": theme('padding.3')
    },
    ".rw-cell,\n    .rw-calendar-btn": {
      "backgroundClip": core.backgroundClip,
      "&:disabled,\n      &.rw-state-disabled": {
        "pointerEvents": "none",
        "opacity": 0.35
      },
      "&:focus": {
        "@apply rw-focus-ring": "true",
        "[data-intent='mouse'] &": {
          "zIndex": "auto",
          "boxShadow": "none"
        }
      }
    },
    ".rw-calendar-btn": {
      "lineHeight": "2em",
      "borderRadius": cal.btnBorderRadius,
      "borderColor": cal.btnBorderColor,
      "&:hover": {
        "color": cal.btnHoverColor,
        "borderColor": cal.btnHoverBorderColor,
        "backgroundColor": cal.btnHoverBackgroundColor
      },
      "&:active": {
        "color": cal.btnActiveColor,
        "borderColor": cal.btnActiveBorderColor,
        "backgroundColor": cal.btnActiveBackgroundColor
      }
    },
    ".rw-calendar-btn-left,\n    .rw-calendar-btn-today,\n    .rw-calendar-btn-right,\n    .rw-calendar-btn-view": {
      "padding": `${theme('padding.1', '4px')} ${theme('padding[2.5]', '10px')}`
    },
    ".rw-calendar-btn-left,\n    .rw-calendar-btn-right": {
      "[dir='rtl'] &": {
        "transform": "scale(-1, 1)"
      }
    },
    ".rw-calendar-btn-view": {
      "fontWeight": "bold",
      "& > :last-child": {
        "margin": `0 ${theme('margin.2')}`
      },
      "& + *": {
        "marginLeft": "auto",
        "[dir='rtl'] &": {
          "marginLeft": "0",
          "marginRight": "auto"
        }
      }
    },
    ".rw-calendar-grid": {
      "display": "table",
      "outline": "none",
      "height": theme('height.56'),
      "padding": core.focusWidth,
      "tableLayout": "fixed",
      "borderCollapse": "separate",
      "borderSpacing": "0",
      "width": "100%",
      "backgroundColor": cal.backgroundColor
    },
    ".rw-calendar-head": {
      "display": "table-header-group"
    },
    ".rw-calendar-body": {
      "display": "table-row-group"
    },
    ".rw-calendar-row": {
      "display": "table-row"
    },
    ".rw-head-cell": {
      "display": "table-cell",
      "textAlign": cal.cellAlign,
      "borderBottom": "1px solid theme('rwInput.borderColor')",
      "padding": cal.cellPadding
    },
    ".rw-cell": {
      "display": "table-cell",
      "color": cal.cellColor,
      "verticalAlign": "middle",
      "borderColor": cal.cellBorderColor,
      "borderRadius": cal.cellBorderRadius,
      "backgroundClip": core.backgroundClip,
      "cursor": "pointer",
      "lineHeight": "normal",
      "textAlign": "center",
      "border": "1px solid transparent",
      "padding": cal.cellPadding,
      "outline": "none",
      "&:hover": {
        "color": cal.cellHoverColor,
        "borderColor": cal.cellHoverBorderColor,
        "backgroundColor": cal.cellHoverBackgroundColor
      },
      "&:active": {
        "color": cal.cellActiveColor,
        "borderColor": cal.cellActiveBorderColor,
        "backgroundColor": cal.cellActiveBackgroundColor
      },
      "&.rw-state-selected": {
        "backgroundColor": cal.cellSelectedBackgroundColor,
        "borderColor": cal.cellSelectedBorderColor,
        "color": cal.cellSelectedColor
      },
      ".rw-calendar-month &": {
        "textAlign": cal.cellAlign
      }
    },
    ".rw-cell-off-range": {
      "color": cal.btnMutedColor
    },
    ".rw-calendar-transition-group": {
      "@apply relative overflow-hidden": "true"
    },
    ".rw-calendar-transition": {
      "@apply w-full overflow-hidden duration-200 transition-transform": "true",
      "transform": "translate3d(0, 0, 0)"
    },
    ".rw-calendar-transition-next": {
      "WebkitBackfaceVisibility": "hidden",
      "backfaceVisibility": "hidden",
      ".rw-calendar-transition-top &": {
        "transform": "translate3d(0, -100%, 0)"
      },
      ".rw-calendar-transition-bottom &": {
        "transform": "translate3d(0, 100%, 0)"
      },
      ".rw-calendar-transition-right &": {
        "transform": "translate3d(-100%, 0, 0)"
      },
      ".rw-calendar-transition-left &": {
        "transform": "translate3d(100%, 0, 0)"
      },
      "&.rw-calendar-transition-active": {
        "transform": "translate3d(0, 0, 0)"
      }
    },
    ".rw-calendar-transition-prev": {
      "@apply absolute top-0 left-0": "true",
      "WebkitBackfaceVisibility": "hidden",
      "backfaceVisibility": "hidden",
      ".rw-calendar-transition-top &": {
        "transform": "translate3d(0, 100%, 0)"
      },
      ".rw-calendar-transition-bottom &": {
        "transform": "translate3d(0, -100%, 0)"
      },
      ".rw-calendar-transition-right &": {
        "transform": "translate3d(100%, 0, 0)"
      },
      ".rw-calendar-transition-left &": {
        "transform": "translate3d(-100%, 0, 0)"
      }
    }
  });
};

exports.plugin = plugin;