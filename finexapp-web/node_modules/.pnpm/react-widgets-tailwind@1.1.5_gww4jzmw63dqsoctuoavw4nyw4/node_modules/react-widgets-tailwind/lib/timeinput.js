"use strict";

exports.__esModule = true;
exports.theme = exports.plugin = void 0;
const theme = {};
exports.theme = theme;

const plugin = ({
  theme,
  addComponents
}) => {
  const input = theme('rwInput');
  addComponents({
    ".rw-time-input": {
      "@apply cursor-text outline-none inline-flex items-center": "true",
      "minHeight": input.height,
      "backgroundColor": input.backgroundColor,
      "border": `${input.borderColor} ${input.borderWidth} solid`,
      "borderRadius": input.borderRadius,
      "&.rw-state-disabled": {
        "@apply cursor-not-allowed": "true"
      }
    },
    ".rw-time-part-input": {
      "@apply rw-btn-input-reset rw-input-base": "true",
      "padding": `0 ${theme('padding.2')}`,
      "cursor": "inherit",
      "&,\n      &::placeholder": {
        "textAlign": "center"
      }
    },
    ".rw-time-part-meridiem": {
      "@apply rw-btn-input-reset lowercase": "true",
      "padding": `0 ${theme('padding.2')}`,
      "fontVariant": "small-caps",
      "& :focus": {
        "outline": "none"
      }
    },
    ".rw-time-input-clear": {
      "@apply opacity-0 outline-none ml-auto": "true",
      "padding": `0 ${theme('padding.2')}`,
      "[dir='rtl'] &": {
        "marginLeft": "revert",
        "marginRight": "auto"
      },
      ".rw-time-input:hover &.rw-show,\n      .rw-time-input.rw-state-focus &.rw-show": {
        "@apply opacity-100": "true"
      }
    }
  });
};

exports.plugin = plugin;