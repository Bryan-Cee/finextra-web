import colors from 'tailwindcss/colors';
export const theme = {
  rwList: theme => {
    const core = theme('rwCore');
    const selected = theme('colors.blue.500', colors.blue[500]);
    return {
      color: core.color,
      fontSize: core.fontSize,
      paddingY: theme('padding.2', '8px'),
      focusBackgroundColor: core.hoverBackgroundColor,
      focusBorderColor: core.hoverBorderColor,
      focusColor: core.hoverColor,
      selectedBackgroundColor: selected,
      selectedBorderColor: selected,
      selectedColor: theme('colors.white'),
      disabledBackgroundColor: 'transparent',
      disabledBorderColor: 'transparent',
      disabledColor: theme('colors.gray.300'),
      optionPaddingY: theme('padding.1', '4px'),
      optionPaddingX: theme('padding.4', '16px'),
      optionMutedColor: theme('colors.gray.400'),
      optionCreateBackgroundColor: core.backgroundColor,
      optionBackgroundClip: core.backgroundClip,
      optgroupColor: null,
      optgroupFontWeight: theme('fontWeight.bold')
    };
  }
};
export const plugin = ({
  theme,
  addComponents
}) => {
  const list = theme('rwList');
  const core = theme('rwCore');
  addComponents({
    ".rw-list": {
      "@apply focus:outline-none": "true",
      "fontSize": list.fontSize,
      "overflowX": "visible",
      "overflowY": "auto",
      "paddingTop": list.paddingY,
      "paddingBottom": list.paddingY
    },
    ".rw-list-option": {
      "userSelect": "none",
      "color": list.color,
      "cursor": "pointer",
      "border": "1px solid transparent",
      "backgroundClip": core.backgroundClip,
      "&:hover,\n      [data-intent='keyboard'] &.rw-state-focus:not(.rw-state-selected)": {
        "backgroundColor": list.focusBackgroundColor,
        "borderColor": list.focusBorderColor,
        "color": list.focusColor
      },
      "&.rw-state-selected": {
        "backgroundColor": list.selectedBackgroundColor,
        "borderColor": list.selectedBorderColor,
        "color": list.selectedColor
      },
      "&.rw-state-disabled": {
        "cursor": "not-allowed",
        "backgroundColor": list.disabledBackgroundColor,
        "borderColor": list.disabledBorderColor,
        "color": list.disabledColor
      }
    },
    ".rw-list-empty,\n    .rw-list-option,\n    .rw-list-optgroup,\n    .rw-list-option-create": {
      "padding": `${list.optionPaddingY} ${list.optionPaddingX}`,
      "outline": "none"
    },
    ".rw-list-empty": {
      "textAlign": "center",
      "color": list.optionMutedColor
    },
    ".rw-list-optgroup": {
      "color": `$ ${list.optgroupColor}`,
      "fontWeight": list.optgroupFontWeight,
      "paddingTop": "7px"
    },
    ".rw-list-option-create": {
      "display": "block",
      "fontSize": "$font-size",
      "padding": `${list.optionPaddingY} ${list.optionPaddingX}`
    }
  });
};